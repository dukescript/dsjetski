/**
 * Copyright (c) 2014, 2015, Oracle and/or its affiliates.
 * All rights reserved.
 */
"use strict";
        define(["ojs/ojcore", "jquery", "ojs/ojcomponentcore", "ojs/ojdvt-base", "ojs/internal-deps/dvt/DvtChart"], function(a, f, d, b, c){a.Da("oj.ojChart", f.oj.dvtBaseComponent, {widgetEventPrefix:"oj", options:{categoryFilter:null, categoryHighlight:null, optionChange:null, selectInput:null, viewportChange:null, viewportChangeInput:null, drill:null}, Ef:function(a, b, d){return c.DvtChart.newInstance(a, b, d)}, si:function(a){var b = a.subId; "oj-chart-item" == b?b = "dataItem[" + a.seriesIndex + "][" + a.itemIndex + "]":"oj-chart-group" ==
                b?b = "group" + this.Wn(a.indexPath):"oj-chart-series" == b?b = "series[" + a.index + "]":"oj-chart-axis-title" == b?b = a.axis + ":title":"oj-chart-reference-object" == b?b = a.axis + ":referenceObject[" + a.index + "]":"oj-legend-section" == b?b = "legend:section" + this.Wn(a.indexPath):"oj-legend-item" == b?(b = "legend:section" + this.Wn(a.sectionIndexPath), b += ":item[" + a.itemIndex + "]"):"oj-chart-tooltip" == b && (b = "tooltip"); return b}, ng:function(a){var b = {}; if (0 == a.indexOf("dataItem")){var c = this.tk(a); b.subId = "oj-chart-item"; b.seriesIndex =
                c[0]; b.itemIndex = c[1]} else if (0 == a.indexOf("group"))b.subId = "oj-chart-group", b.indexPath = this.tk(a); else if (0 == a.indexOf("series"))b.subId = "oj-chart-series", b.index = this.wi(a); else if (0 < a.indexOf("Axis:title"))b.subId = "oj-chart-axis-title", b.axis = a.substring(0, a.indexOf(":")); else if (0 < a.indexOf("Axis:referenceObject"))b.subId = "oj-chart-reference-object", b.axis = a.substring(0, a.indexOf(":")), b.index = this.wi(a); else if (0 == a.indexOf("legend"))if (0 < a.indexOf(":item")){var d = a.indexOf(":item"), c = a.substring(0,
                d); a = a.substring(d); b.subId = "oj-legend-item"; b.sectionIndexPath = this.tk(c); b.itemIndex = this.wi(a)} else 0 == a.indexOf("section") && (b.subId = "oj-legend-section", b.indexPath = this.tk(a)); else"tooltip" == a && (b.subId = "oj-chart-tooltip"); return b}, Ix:function(){this._super(); this.options.styleDefaults || (this.options.styleDefaults = {}); if (!this.options.styleDefaults.colors){var b = new a.xe; this.options.styleDefaults.colors = b.sp()}}, He:function(){var a = this._super(); a.push("oj-chart"); return a}, ti:function(){var a =
                this._super(); a["oj-chart-footnote"] = {path:"footnote/style", property:"CSS_TEXT_PROPERTIES"}; a["oj-chart-slice-label"] = {path:"styleDefaults/sliceLabelStyle", property:"CSS_TEXT_PROPERTIES"}; a["oj-chart-subtitle"] = {path:"subtitle/style", property:"CSS_TEXT_PROPERTIES"}; a["oj-chart-title"] = {path:"title/style", property:"CSS_TEXT_PROPERTIES"}; a["oj-chart-xaxis-tick-label"] = {path:"xAxis/tickLabel/style", property:"CSS_TEXT_PROPERTIES"}; a["oj-chart-xaxis-title"] = {path:"xAxis/titleStyle", property:"CSS_TEXT_PROPERTIES"};
                a["oj-chart-yaxis-tick-label"] = {path:"yAxis/tickLabel/style", property:"CSS_TEXT_PROPERTIES"}; a["oj-chart-yaxis-title"] = {path:"yAxis/titleStyle", property:"CSS_TEXT_PROPERTIES"}; a["oj-chart-y2axis-tick-label"] = {path:"y2Axis/tickLabel/style", property:"CSS_TEXT_PROPERTIES"}; a["oj-chart-y2axis-title"] = {path:"y2Axis/titleStyle", property:"CSS_TEXT_PROPERTIES"}; a["oj-chart-stock-falling"] = {path:"styleDefaults/stockFallingColor", property:"background-color"}; a["oj-chart-stock-range"] = {path:"styleDefaults/stockRangeColor",
                property:"background-color"}; a["oj-chart-stock-rising"] = {path:"styleDefaults/stockRisingColor", property:"background-color"}; a["oj-chart-pan-icon"] = {path:"_resources/panUp", property:"CSS_URL"}; a["oj-chart-pan-icon oj-active"] = {path:"_resources/panDown", property:"CSS_URL"}; a["oj-chart-select-icon"] = {path:"_resources/selectUp", property:"CSS_URL"}; a["oj-chart-select-icon oj-active"] = {path:"_resources/selectDown", property:"CSS_URL"}; a["oj-chart-zoom-icon"] = {path:"_resources/zoomUp", property:"CSS_URL"};
                a["oj-chart-zoom-icon oj-active"] = {path:"_resources/zoomDown", property:"CSS_URL"}; a["oj-legend"] = {path:"legend/textStyle", property:"CSS_TEXT_PROPERTIES"}; a["oj-legend-title"] = {path:"legend/titleStyle", property:"CSS_TEXT_PROPERTIES"}; a["oj-legend-section-close-icon"] = {path:"legend/_resources/closedEnabled", property:"CSS_URL"}; a["oj-legend-section-close-icon oj-hover"] = {path:"legend/_resources/closedOver", property:"CSS_URL"}; a["oj-legend-section-close-icon oj-active"] = {path:"legend/_resources/closedDown",
                property:"CSS_URL"}; a["oj-legend-section-open-icon"] = {path:"legend/_resources/openEnabled", property:"CSS_URL"}; a["oj-legend-section-open-icon oj-hover"] = {path:"legend/_resources/openOver", property:"CSS_URL"}; a["oj-legend-section-open-icon oj-active"] = {path:"legend/_resources/openDown", property:"CSS_URL"}; return a}, vi:function(){return"categoryFilter categoryHighlight drill optionChange selectInput viewportChange viewportChangeInput".split(" ")}, Jh:function(){var a = this.options.translations, b = this._super();
                b["DvtChartBundle.DEFAULT_GROUP_NAME"] = this.YM("labelDefaultGroupName", ["groupName"]); b["DvtChartBundle.LABEL_SERIES"] = a.labelSeries; b["DvtChartBundle.LABEL_GROUP"] = a.labelGroup; b["DvtChartBundle.LABEL_VALUE"] = a.labelValue; b["DvtChartBundle.LABEL_TARGET_VALUE"] = a.labelTargetValue; b["DvtChartBundle.LABEL_X"] = a.labelX; b["DvtChartBundle.LABEL_Y"] = a.labelY; b["DvtChartBundle.LABEL_Z"] = a.labelZ; b["DvtChartBundle.LABEL_PERCENTAGE"] = a.labelPercentage; b["DvtChartBundle.LABEL_LOW"] = a.labelLow; b["DvtChartBundle.LABEL_HIGH"] =
                a.labelHigh; b["DvtChartBundle.LABEL_OPEN"] = a.labelOpen; b["DvtChartBundle.LABEL_CLOSE"] = a.labelClose; b["DvtChartBundle.LABEL_VOLUME"] = a.labelVolume; b["DvtChartBundle.LABEL_MIN"] = a.labelMin; b["DvtChartBundle.LABEL_MAX"] = a.labelMax; b["DvtChartBundle.LABEL_OTHER"] = a.labelOther; b["DvtChartBundle.PAN"] = a.tooltipPan; b["DvtChartBundle.MARQUEE_SELECT"] = a.tooltipSelect; b["DvtChartBundle.MARQUEE_ZOOM"] = a.tooltipZoom; b["DvtUtilBundle.CHART"] = a.componentName; a.labelDefaultGroupName = a.labelDefaultGroupName.replace("{groupName}",
                "{0}"); return b}, xi:function(a){var b = a && a.getType?a.getType():null; if (b === c.DvtSelectionEvent.TYPE || b === c.DvtSelectionEvent.TYPE_INPUT){var d = a.getSelection(); if (d){for (var f = [], l = 0; l < d.length; l++){var m = {id:d[l].getId(), series:d[l].getSeries(), group:d[l].getGroup()}; f.push(m)}a = {endGroup:a.getEndGroup(), startGroup:a.getStartGroup(), xMax:a.getXMax(), xMin:a.getXMin(), yMax:a.getYMax(), yMin:a.getYMin()}; b === c.DvtSelectionEvent.TYPE?this.Cc("selection", f, a):(a.items = f, this._trigger("selectInput", null,
                a))}} else b === c.DvtCategoryHideShowEvent.TYPE_HIDE || b === c.DvtCategoryHideShowEvent.TYPE_SHOW?(b = b === c.DvtCategoryHideShowEvent.TYPE_HIDE?"out":"in", this._trigger("categoryFilter", null, {category:a.getCategory(), type:b}), this.Cc("hiddenCategories", a.hiddenCategories)):b === c.DvtCategoryRolloverEvent.TYPE_OVER || b === c.DvtCategoryRolloverEvent.TYPE_OUT?(this._trigger("categoryHighlight", null, {categories:a.categories, type:b === c.DvtCategoryRolloverEvent.TYPE_OVER?"on":"off"}), this.Cc("highlightedCategories",
                a.categories)):b === c.DvtChartViewportChangeEvent.TYPE || b === c.DvtChartViewportChangeEvent.TYPE_INPUT?(f = {endGroup:a.getEndGroup(), startGroup:a.getStartGroup(), xMax:a.getXMax(), xMin:a.getXMin(), yMax:a.getYMax(), yMin:a.getYMin()}, b === c.DvtChartViewportChangeEvent.TYPE && (this.options.xAxis || (this.options.xAxis = {}), this.options.yAxis || (this.options.yAxis = {}), this.options.xAxis.viewportStartGroup = null, this.options.xAxis.viewportEndGroup = null, null != a.getXMin() && null != a.getXMax() && (this.options.xAxis.viewportMin =
                a.getXMin(), this.options.xAxis.viewportMax = a.getXMax()), null != a.getYMin() && null != a.getYMax() && (this.options.yAxis.viewportMin = a.getYMin(), this.options.yAxis.viewportMax = a.getYMax())), this._trigger(b === c.DvtChartViewportChangeEvent.TYPE?"viewportChange":"viewportChangeInput", null, f)):b === c.DvtDrillEvent.TYPE?this._trigger("drill", null, {id:a.getId(), series:a.getSeries(), group:a.getGroup()}):this._super(a)}, kq:function(){null == this.options._resources && (this.options._resources = {}); var b = this.options._resources;
                b.overviewGrippy = a.ba.jb("resources/internal-deps/dvt/chart/drag_horizontal.png"); b.panCursorDown = a.ba.jb("resources/internal-deps/dvt/chart/hand-closed.cur"); b.panCursorUp = a.ba.jb("resources/internal-deps/dvt/chart/hand-open.cur")}, getTitle:function(){return this.oa.getAutomation().getTitle()}, getGroup:function(a){return this.oa.getAutomation().getGroup(a)}, getSeries:function(a){return this.oa.getAutomation().getSeries(a)}, getGroupCount:function(){return this.oa.getAutomation().getGroupCount()},
                getSeriesCount:function(){return this.oa.getAutomation().getSeriesCount()}, getDataItem:function(a, b){var c = this.oa.getAutomation().getDataItem(a, b); this.mg(c); return c}, getLegend:function(){var a = this.oa.getAutomation().getLegend(); this.mg(a); return a}, getPlotArea:function(){var a = this.oa.getAutomation().getPlotArea(); this.mg(a); return a}, getXAxis:function(){var a = this.oa.getAutomation().getXAxis(); this.mg(a); return a}, getYAxis:function(){var a = this.oa.getAutomation().getYAxis(); this.mg(a); return a},
                getY2Axis:function(){var a = this.oa.getAutomation().getY2Axis(); this.mg(a); return a}, getValuesAt:function(a, b){return this.oa.getValuesAt(a, b)}, getContextByNode:function(a){return(a = this.getSubIdByNode(a)) && "oj-chart-tooltip" !== a.subId?a:null}}); a.Da("oj.ojSparkChart", f.oj.dvtBaseComponent, {widgetEventPrefix:"oj", options:{}, Ef:function(a, b, d){return c.DvtSparkChart.newInstance(a, b, d)}, He:function(){var a = this._super(); a.push("oj-sparkchart"); return a}, Jh:function(){var a = this.options.translations,
                b = this._super(); b["DvtUtilBundle.CHART"] = a.componentName; return b}, Hf:function(){this.element.attr("title")?(this.options.shortDesc = this.element.attr("title"), this.element.data(this.element, "title", this.element.attr("title")), this.element.removeAttr("title")):this.element.data("title") && (this.options.shortDesc = this.element.data("title")); this._super()}, getDataItem:function(b){var c = this.oa.getAutomation(); return new a.Ue(c.getDataItem(b))}}); a.Ue = function(a){this.f = a}; o_("SparkChartDataItem", a.Ue,
                a); a.Ue.prototype.jY = function(){return this.f?this.f.borderColor:null}; a.b.i("SparkChartDataItem.prototype.getBorderColor", {jY:a.Ue.prototype.jY}); a.Ue.prototype.oY = function(){return this.f?this.f.color:null}; a.b.i("SparkChartDataItem.prototype.getColor", {oY:a.Ue.prototype.oY}); a.Ue.prototype.getDate = function(){return this.f?this.f.date:null}; a.b.i("SparkChartDataItem.prototype.getDate", {getDate:a.Ue.prototype.getDate}); a.Ue.prototype.getFloatValue = function(){return this.SJ()}; a.b.i("SparkChartDataItem.prototype.getFloatValue",
        {getFloatValue:a.Ue.prototype.getFloatValue}); a.Ue.prototype.SJ = function(){return this.f?this.f.low:null}; a.b.i("SparkChartDataItem.prototype.getLow", {SJ:a.Ue.prototype.SJ}); a.Ue.prototype.BY = function(){return this.f?this.f.high:null}; a.b.i("SparkChartDataItem.prototype.getHigh", {BY:a.Ue.prototype.BY}); a.Ue.prototype.Pc = function(){return this.f?this.f.value:null}; a.b.i("SparkChartDataItem.prototype.getValue", {Pc:a.Ue.prototype.Pc})});